@*localModel = (ViewBag.LoginModel == null ? new MVC.Models.Views.LogIn() : (MVC.Models.Views.LogIn)ViewBag.LoginModel);*@

@model MVC.Models.Views.LogIn

<!-- Modal -->
<div class="modal fade" id="LoginModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Connexion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @{if (ViewBag.CodeErrorConnection == 1)
                    {

                        <div class="text-danger">@ViewBag.errorConnection </div>
                    }

                }

                @using (Html.BeginForm("LogIn", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-label-group">
                                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control col-md-12", @placeholder = "Email" } })
                                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.Login, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-label-group">
                                @Html.EditorFor(model => model.PWD, new { htmlAttributes = new { @class = "form-control col-md-12", @placeholder = "Mot de passe" } })
                                @Html.LabelFor(model => model.PWD, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.PWD, null, new { @class = "text-danger" })
                            </div>

                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary btn-block">Connexion</button>
                                    <button type="button" class="btn btn-danger btn-block">Mot de passe oublié ?</button>
                                </div>
                            </div>
                            }
                        </div>
        </div>
    </div>
</div>



